{"version":3,"sources":["webpack://CartesianSystem/webpack/universalModuleDefinition","webpack://CartesianSystem/webpack/bootstrap","webpack://CartesianSystem/../node_modules/webpack/buildin/global.js","webpack://CartesianSystem/./Camera.js","webpack://CartesianSystem/./CameraGrid.js","webpack://CartesianSystem/./CartesianSystem.js","webpack://CartesianSystem/./World.js"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD,O;QCVA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;;QAEA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;;;QAGA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;QACA,0CAA0C,gCAAgC;QAC1E;QACA;;QAEA;QACA;QACA;QACA,wDAAwD,kBAAkB;QAC1E;QACA,iDAAiD,cAAc;QAC/D;;QAEA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA,yCAAyC,iCAAiC;QAC1E,gHAAgH,mBAAmB,EAAE;QACrI;QACA;;QAEA;QACA;QACA;QACA,2BAA2B,0BAA0B,EAAE;QACvD,iCAAiC,eAAe;QAChD;QACA;QACA;;QAEA;QACA,sDAAsD,+DAA+D;;QAErH;QACA;;;QAGA;QACA;;;;;;;;;;;;AClFA;;AAEA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;;AAEA;AACA;AACA,4CAA4C;;AAE5C;;;;;;;;;;;;ACnBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,wB;;;;;;;;;;;ACxCA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA,sBAAsB,UAAU;AAChC;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA,4B;;;;;;;;;;;AC5BA;AACA,WAAW,mBAAO,CAAC,8BAAY;AAC/B;;AAEA;AACA;AACA;;;;;;;;;;;;;ACNA,aAAa,mBAAO,CAAC,gCAAa;AAClC,iBAAiB,mBAAO,CAAC,wCAAiB;;AAE1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA,uB","file":"CartesianSystem.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"CartesianSystem\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"CartesianSystem\"] = factory();\n\telse\n\t\troot[\"CartesianSystem\"] = factory();\n})(window, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./CartesianSystem.js\");\n","var g;\n\n// This works in non-strict mode\ng = (function() {\n\treturn this;\n})();\n\ntry {\n\t// This works if eval is allowed (see CSP)\n\tg = g || new Function(\"return this\")();\n} catch (e) {\n\t// This works if the window reference is available\n\tif (typeof window === \"object\") g = window;\n}\n\n// g can still be undefined, but nothing to do about it...\n// We return undefined, instead of nothing here, so it's\n// easier to handle this case. if(!global) { ...}\n\nmodule.exports = g;\n","function Camera(windowX, windowY, windowWidth, windowHeight)\r\n{\r\n    // Window stuff\r\n    this.windowX = windowX;\r\n    this.windowY = windowY;\r\n    this.windowWidth = windowWidth;\r\n    this.windowHeight = windowHeight;\r\n    this.halfWindowWidth = this.windowWidth / 2;\r\n    this.halfWindowHeight = this.windowHeight / 2;\r\n\r\n    // Needed for moving the camera\r\n    this.focusX = 0;\r\n    this.focusY = 0;\r\n    this.focusSpeed = 0.5;\r\n\r\n    // The bounds the camera will stay with in\r\n    // These will need to be set externally\r\n    this.bounds = {\r\n        minX: -Infinity,\r\n        minY: -Infinity,\r\n        maxX: Infinity,\r\n        maxY: Infinity\r\n    };\r\n}\r\nCamera.prototype.follow = function(x, y)\r\n{\r\n    // Move direction and move magnitude\r\n    // These will be used to move the focus of the camera \r\n    var moveDir = Math.atan2(y - this.focusY, x - this.focusX);\r\n    var moveMag = Math.sqrt(Math.pow(x - this.focusX, 2) + Math.pow(y - this.focusY, 2)) * this.speed;\r\n\r\n    // Move camera in both x and y components\r\n    this.focusX += this.distance * Math.cos(this.angle);\r\n    this.focusY += this.distance * Math.sin(this.angle);\r\n\r\n    // Keep it within bounds\r\n    this.focusX = Math.min(Math.max(this.focusX, this.bounds.minX), this.bounds.maxX);\r\n    this.focusY = Math.min(Math.max(this.focusY, this.bounds.minY), this.bounds.maxY);\r\n};\r\n\r\nmodule.exports = Camera;","function CameraGrid(cols, rows, cellWidth, cellHeight)\r\n{\r\n    this.cols = cols;\r\n    this.rows = rows;\r\n    this.cellWidth = cellWidth;\r\n    this.cellHeight = cellHeight;\r\n\r\n    var grid = [];\r\n\r\n    this.refill = function()\r\n    {\r\n        grid.length = 0;\r\n\r\n        var cols = this.cols;\r\n        var rows = this.rows;\r\n\r\n        for(var i = 0; i < cols; i++)\r\n        {\r\n            // Create a cell with no __proto__ object\r\n            var cell = Object.create(null);\r\n\r\n            grid.push(Array(rows).fill(cell));\r\n        }\r\n\r\n        console.log(grid);\r\n    };\r\n}\r\n\r\nmodule.exports = CameraGrid;","var CartesianSystem = {\r\n    World: require(\"./World.js\")\r\n};\r\n\r\n// Export it\r\nmodule.exports = CartesianSystem;\r\nglobal.CartesianSystem = CartesianSystem;\r\n","let Camera = require(\"./Camera.js\");\r\nlet CameraGrid = require(\"./CameraGrid.js\");\r\n\r\nfunction World(config)\r\n{\r\n    let camera = new Camera(\r\n        config.camera.window.x,\r\n        config.camera.window.y,\r\n        config.camera.window.width,\r\n        config.camera.window.height,\r\n    );\r\n    let cameraGrid = new CameraGrid(\r\n        config.grid.cols, \r\n        config.grid.rows, \r\n        config.grid.cell.width, \r\n        config.grid.cell.height\r\n    );\r\n\r\n    this.init = function()\r\n    {\r\n        cameraGrid.refill();\r\n    };\r\n}\r\n\r\nmodule.exports = World;"],"sourceRoot":""}